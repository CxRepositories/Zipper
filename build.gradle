plugins { id "com.jfrog.bintray" version "1.5" }

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'project-report'
apply plugin: 'maven-publish'

group = 'com.checkmarx.components'
version = '1.2.2-SNAPSHOT'

description = "Zipper"

sourceCompatibility = 1.6
targetCompatibility = 1.6

jar {
	manifest {
		attributes	'Implementation-Title': project.description,
		'Implementation-Version': project.version,
		'Repository-Version': repositoryVersion
	}
}

test {
	maxParallelForks = Runtime.getRuntime().availableProcessors()
}

repositories { jcenter() }

dependencies {
	compile 'org.apache.ant:ant:1.9.2',
			'log4j:log4j:1.2.17',
			'org.apache.commons:commons-lang3:3.1',
			'commons-io:commons-io:2.4'

	testCompile 'junit:junit:4.12'
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
	classifier "sources"
}

publishing {
	publications {
		mavenJava(MavenPublication) {

			from components.java

			artifact sourceJar
		}
	}
}

publishing.publications.all {
	pom.withXml {
		asNode().children().last() + {
			licenses {
				license {
					name 'MIT license'
					url 'http://opensource.org/licenses/MIT'
					distribution 'repo'
				}
			}
		}
		// Workaround for the issue described here: https://discuss.gradle.org/t/maven-publish-plugin-generated-pom-making-dependency-scope-runtime/7494
		asNode().dependencies.'*'.findAll() {
			it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
				dep.name == it.artifactId.text()
			}
		}.each() {
			it.scope*.value = 'compile'
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_KEY')
	publications = ['mavenJava']
	pkg {
		repo = 'maven'
		name = 'com.checkmarx.components'
		licenses = ['MIT']
		vcsUrl = 'https://github.com/CxSAST/zipper.git'
	}
}